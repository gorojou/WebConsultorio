@using WebMedico.Models
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- Auto refresh session -->
    <meta http-equiv="refresh" content="35">
    <!-- End Auto refresh session -->
    <title>@ViewBag.Title Health Link International LTD</title>
    @Scripts.Render("~/bundles/jquery")
    @Styles.Render("~/css/css")
    <style>
        .material-icons {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            vertical-align: middle;
            margin-bottom: 5px;
        }

        #conversationsList {
            max-height: 350px;
            overflow:auto;
        }
    </style>
</head>

<body class="hidden-sn white-skin">
    
    @RenderSection("modals", required: false)

    <header>
        <!--Navbar-->
        <nav class="navbar fixed-top navbar-toggleable-md navbar-dark scrolling-navbar double-nav blue">

            <!-- SideNav slide-out button -->
            <div class="float-left">
                <a class="waves-effect" href="@Url.Action("Index", "Home")"><i class="material-icons white-text">arrow_back</i></a>
            </div>

            <div class="breadcrumb-dn mr-auto">
                <p class="text-white"><strong>Histórico de consultas </strong></p>
            </div>

            <!--Navbar links-->
            <ul class="nav navbar-nav nav-flex-icons ml-auto">
                <li class="nav-item dropdown">

                    <div class="dropdown-menu header-notifications animated dropdown-menu-left" aria-labelledby="navbarDropdownMenuLink">
                        <ul>
                            Notificacões
                            <li class="active-notification"><i class="fa fa-user" aria-hidden="true"></i> New order received <span class="float-right grey-text"><i class="fa fa-clock-o" aria-hidden="true"></i> 13 min</span></li>
                            <li class="active-notification"><i class="fa fa-user" aria-hidden="true"></i> New order received <span class="float-right grey-text"><i class="fa fa-clock-o" aria-hidden="true"></i> 51 min</span></li>
                            <li class="active-notification"><i class="fa fa-bullhorn" aria-hidden="true"></i> Your campaign is about to end <span class="float-right grey-text"><i class="fa fa-clock-o" aria-hidden="true"></i> 3 hours</span></li>
                            <li class="active-notification"><i class="fa fa-line-chart" aria-hidden="true"></i> Raport is ready to be downloaded <span class="float-right grey-text"><i class="fa fa-clock-o" aria-hidden="true"></i> 1 day</span></li>
                            <li class="active-notification"><i class="fa fa-life-saver" aria-hidden="true"></i> Something else <span class="float-right grey-text"><i class="fa fa-clock-o" aria-hidden="true"></i> 1 day</span></li>
                        </ul>
                    </div>
                </li>

                <li class="nav-item dropdown" id="messageNotifications">
                    <!--Notificaciones-->
                    @Html.Action("GetMessagesNotifications")
                </li>

            </ul>
        </nav>
    </header>

    <main>
        <div class="container-fluid body-content">
            @RenderBody()
        </div>
    </main>

    @Scripts.Render("~/bundles/tether")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/mdb")
    <script src="~/Content/Assets/js/mbdc.js"></script>
    <script src="https://media.twiliocdn.com/sdk/js/common/v0.1/twilio-common.min.js"></script>
    <script src="https://media.twiliocdn.com/sdk/js/chat/v1.0/twilio-chat.js"></script>
    <script src="~/Content/Assets/js/components/twilio-chat.js"></script>
    @RenderSection("scripts", required: false)
    <script>
        $('.datepicker').pickadate({
            today: 'Hoje',
            clear: 'Limpar',
            close: 'Cancelar',
        });

        var states = [
            "Brasil",
            "Portugal",
            "Venezuela",
            "Chile",
            "Argentina"
        ];
        $(document).ready(function () {
            $('.mdb-select').material_select();
            $('.mdb-autocomplete').mdb_autocomplete({
                data: states
            });

            var callwatch = (function () {
                var timer = 0;
                return function (callback, ms) {
                    clearTimeout(timer);
                    timer = setTimeout(callback, ms);
                };
            })();

            @{ 
                string IdDoctor = string.Empty;
                try {
                    IdDoctor = ((WebMedico.Models.CustomPrincipal)HttpContext.Current.User).IdDoctor.ToString();
                }
                catch (Exception) {
                    IdDoctor = "Anonimous";
                }
             }

            var drIdentity = 'dr@(IdDoctor)';

            var chatManager = new TwilioChatManager({
                urlTokenEndpoint: '@System.Web.Configuration.WebConfigurationManager.AppSettings["ApiUrl"]/api/GenerateChatToken',
                            identity: drIdentity,
                            onMemberUpdated: function () {

                                callwatch(function () {
                        $.get('@Url.Action("GetMessagesNotifications")', function (data) {
                            $("#messageNotifications").html(data);
                    });
                    }, 500);
                },
                onNewMessage: function (message) {
                    if (message.author !== drIdentity) {
                        callwatch(function () {
                            $.get('@Url.Action("GetMessagesNotifications")', function (data) {
                                $("#messageNotifications").html(data);

                                var messageChannelState = message.channel.state;

                                //$("#messageNotifications [data-channelid*='" + message.author + "']").click();
                                chatManager.openConversation(messageChannelState.uniqueName, messageChannelState.friendlyName, false);
                            });
                        }, 500);
                    }
                }
            });

            $(document).on('click', '#conversationsList li', function () {
                    chatManager.openConversation($(this).data('channelid'), $('.title', this).text(), true);
                });

        });
    </script>
    <script>
        // SideNav init
        new WOW().init();
        $(".button-collapse").sideNav();
        var el = document.querySelector('.custom-scrollbar');
        Ps.initialize(el);
    </script>
</body>
</html>